[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@443118b0
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@1c852c0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@1c852c0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1c852c0f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@24c4ddae
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e07b95f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@3b79fd76
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@544d57e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@544d57e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@544d57e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@26df6e3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@26df6e3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26df6e3a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2d9caaeb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@2d9caaeb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d9caaeb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@27508c5d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@27508c5d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@27508c5d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@404bbcbd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@404bbcbd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@404bbcbd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@658c5a19
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@658c5a19
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@658c5a19
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1187c9e8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1187c9e8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1187c9e8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@518caac3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@518caac3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2a3888c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2a3888c1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@1722011b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@1722011b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6a47b187
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7c51f34b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7c51f34b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@6fa34d52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6fa34d52
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@3eb81efb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3eb81efb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cdec700
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5cdec700
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5170bcf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5170bcf4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5e403b4a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5e403b4a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19e7a160
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@19e7a160
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6cb6decd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6cb6decd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@39d9314d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@39d9314d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@6676f6a0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6676f6a0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@11f0a5a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@11f0a5a1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6bf08014
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6bf08014
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6bf08014
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1fb19a0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@5082d622
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5082d622
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5082d622
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@332729ad
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@6057aebb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6057aebb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7b8b43c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7b8b43c7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@41005828
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@41294f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@41294f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@41294f8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d07a63d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d07a63d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d07a63d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@d278d2b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@3081f72c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@3561c410
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@3561c410
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@3561c410
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@20f5281c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@20f5281c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@20f5281c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@4397ad89
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@71329995
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@6c2ed0cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6c2ed0cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@51133c06
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@36a5cabc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36a5cabc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@36060e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@36060e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2e48362c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7d446ed1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@3bd323e9
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@49c66ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49c66ade
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@12359a82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@479460a6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7164ca4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3b366632
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2575f671, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@443118b0, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c8a68c1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@502f8b57]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e521715]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4248ed58]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4564e94b]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51745f40]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1ed4e5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1efdcd5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2772d1]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faa3fed]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5a54b7]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6bcf87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6b9a95]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cee7fa0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e698c7]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267bbe1a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@389562d6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2160e52a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@29a23c3d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6ac111]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6079cf5'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@102d92c4
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 12ae5745-93ba-4f90-b643-87fcb3588996 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: f7190927-30ef-402e-866a-dffbb6049a86 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 765288bd-dbbc-4c98-b47d-3f56c5d6d331 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl  - Rendered criteria query -> select generatedAlias0 from Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@65f2f9b0
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  |  \-[IDENT] Node: 'banking'
       |     |  |  \-[IDENT] Node: 'beans'
       |     |  \-[IDENT] Node: 'Transaction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Transaction (generatedAlias0) -> transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : generatedAlias0 -> transactio0_.transactionId
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} transactio0_.transactionId ) ( FromClause{level=1} Transaction transactio0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Transaction transactio0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Transaction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transactionId as transactionId1_1_' {alias=generatedAlias0, className=com.cg.banking.beans.Transaction, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Transaction,tableAlias=transactio0_,origin=null,columns={,className=com.cg.banking.beans.Transaction}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: e8763522-60a7-4f98-af24-d8117e1f862c (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 101, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Withdraw, amount=10000.0, transactionId=101, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=4000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl  - Rendered criteria query -> select generatedAlias0 from Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4d1f1ff5
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  |  \-[IDENT] Node: 'banking'
       |     |  |  \-[IDENT] Node: 'beans'
       |     |  \-[IDENT] Node: 'Transaction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Transaction (generatedAlias0) -> transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : generatedAlias0 -> transactio0_.transactionId
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} transactio0_.transactionId ) ( FromClause{level=1} Transaction transactio0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Transaction transactio0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Transaction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transactionId as transactionId1_1_' {alias=generatedAlias0, className=com.cg.banking.beans.Transaction, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Transaction,tableAlias=transactio0_,origin=null,columns={,className=com.cg.banking.beans.Transaction}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: d9c72c27-1ad0-4983-a2aa-8d60e7979135 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: a8a4687d-5079-4f34-b6c5-1d218ee90759 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@13b3d178
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@51c693d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@48c76607
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b6776cb
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5a37d3ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f6745d6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1bab8268
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3fc79729
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@57c03d88
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@58594a11
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@68f1b17f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@398dada8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@12a94400
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@11bb571c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@125290e5
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1205bd62
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@30c8681
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@35399441
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1a72a540
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7674b62c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@327af41b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@30bce90b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ce6c6ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1b45c0e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4416d64f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6ee4d9ab
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@18e36d14
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@75d2da2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3370f42
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@352c1b98
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48d61b48
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@176b75f7
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3b8f0a79
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60b4beb4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@436c81a3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@609db546
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@341814d3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@119cbf96
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@455b6df1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60410cd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5a3bc7ed
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1efe439d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@12d2ce03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@6d167f58
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@68df9280
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4f3bbf68
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5be46f9d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68702e03
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a220c9a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2421cc4
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30c93896
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@59a008ba
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@617fe9e1
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d35442b, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@2d3379b4, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f8890c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55120f99]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1286528d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54534abf]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45673f68]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27abb83e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308c6]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@667e34b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6e0a08]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1623bbe5]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7af1cd63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37d00a23]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@381cad29]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61f2c3f0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58f174d9]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57bd2029]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d64b553]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc735b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2234078]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@6edc4161'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@18324f97
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: c46a37d7-ff7a-49be-8688-68b64d8717b0 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 101, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Withdraw, amount=10000.0, transactionId=101, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=4000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl  - Rendered criteria query -> select generatedAlias0 from Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@4d1f1ff5
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  |  \-[IDENT] Node: 'banking'
       |     |  |  \-[IDENT] Node: 'beans'
       |     |  \-[IDENT] Node: 'Transaction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Transaction (generatedAlias0) -> transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : generatedAlias0 -> transactio0_.transactionId
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} transactio0_.transactionId ) ( FromClause{level=1} Transaction transactio0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Transaction transactio0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Transaction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transactionId as transactionId1_1_' {alias=generatedAlias0, className=com.cg.banking.beans.Transaction, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Transaction,tableAlias=transactio0_,origin=null,columns={,className=com.cg.banking.beans.Transaction}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@292b08d6
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44a59da3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@404bbcbd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57576994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57576994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@490caf5f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@490caf5f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4032d386
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4032d386
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27adc16e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4066c471
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7d3d101b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d3d101b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1f75a668
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1f75a668
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@f99f5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f99f5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2474f125
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2474f125
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40317ba2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40317ba2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c45d770
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c45d770
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cbd9d24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cbd9d24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10f7f7de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10f7f7de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9573584
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9573584
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f6f416f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44c73c26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b67bb7e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b67bb7e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@56c4278e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f67593e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@82ea68c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1838ccb8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@42530531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42530531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35645047
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12359a82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12359a82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7164ca4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@21ba0741
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c78d320
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c78d320
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@106cc338
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cc558c6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15713d56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63f259c3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ceffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@600b90df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c8c9a05
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7689ddef
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d8f2f3a, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@292b08d6, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ca66933]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63998bf4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e6b9a95]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cee7fa0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e2c95ee]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5942ee04]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e76a2bb]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14faa38c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ff2b8d2]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1484]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb5fe30]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456be73c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2375b321]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b6e8f77]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a6d121]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f449e8f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e28bb87]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f040ba]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ab05ed]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c3c4c1c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d238b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7cc3cb]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6cb754]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7d1df8]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c68a5f8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aefae67]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6719a5b8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bff19ff]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e1455d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccd3b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f197e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1dd11]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c089b2f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bae047]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41477a6d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc12da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534ca02b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a23c3d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe46b62]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9b78e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2a69b4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a619c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ff6077'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@21ab988f
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 006767a0-ee65-4a15-a039-2e2e74609de6 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 101, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Withdraw, amount=10000.0, transactionId=101, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=4000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl  - Rendered criteria query -> select generatedAlias0 from Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5633dafd
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  |  \-[IDENT] Node: 'banking'
       |     |  |  \-[IDENT] Node: 'beans'
       |     |  \-[IDENT] Node: 'Transaction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Transaction (generatedAlias0) -> transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : generatedAlias0 -> transactio0_.transactionId
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} transactio0_.transactionId ) ( FromClause{level=1} Transaction transactio0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Transaction transactio0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Transaction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transactionId as transactionId1_1_' {alias=generatedAlias0, className=com.cg.banking.beans.Transaction, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Transaction,tableAlias=transactio0_,origin=null,columns={,className=com.cg.banking.beans.Transaction}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from Associate a where balance < 5000.0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[IDENT] Node: 'Associate'
    |        \-[ALIAS] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[IDENT] Node: 'balance'
          \-[NUM_DOUBLE] Node: '5000.0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.jboss.logging  - Logging Provider: org.jboss.logging.Log4jLoggerProvider
[main] DEBUG org.hibernate.jpa.internal.util.LogHelper  - PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@659e0bfd
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.DriverManagerDataSource@292b08d6
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/159859_Singh_Harkanwalpreet/Spring/CgBankingSpringJPAHibernate/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.cg.banking.beans.Account
		com.cg.banking.beans.Transaction]
	Mapping files names []
	Properties []
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[main] DEBUG org.hibernate.integrator.internal.IntegratorServiceImpl  - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[main] INFO  org.hibernate.Version  - HHH000412: Hibernate Core {5.2.12.Final}
[main] INFO  org.hibernate.cfg.Environment  - HHH000206: hibernate.properties not found
[main] DEBUG org.hibernate.service.spi.ServiceBinding  - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[main] DEBUG org.hibernate.cache.internal.RegionFactoryInitiator  - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[main] INFO  org.hibernate.annotations.common.Version  - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@52e7a6b2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@44a59da3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3ddc6915
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration yes_no -> org.hibernate.type.YesNoType@404bbcbd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2b9ed6da
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration character -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@389c4eb1
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@78a773fd
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration integer -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration int -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@135606db
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4167d97b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7cb502c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1ef6d34c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@57576994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@57576994
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@490caf5f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@490caf5f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration string -> org.hibernate.type.StringType@4032d386
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.String -> org.hibernate.type.StringType@4032d386
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@27adc16e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4066c471
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration url -> org.hibernate.type.UrlType@7d3d101b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7d3d101b
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Duration -> org.hibernate.type.DurationType@1f75a668
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1f75a668
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Instant -> org.hibernate.type.InstantType@f99f5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@f99f5e0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2474f125
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2474f125
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@40317ba2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@40317ba2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5c45d770
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5c45d770
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cbd9d24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7cbd9d24
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@10f7f7de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@10f7f7de
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9573584
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9573584
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration date -> org.hibernate.type.DateType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21129f1f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration time -> org.hibernate.type.TimeType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68d279ec
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timestamp -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5965be2d
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f6f416f
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@3eb77ea8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@44c73c26
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration locale -> org.hibernate.type.LocaleType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4196c360
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration currency -> org.hibernate.type.CurrencyType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@479ceda0
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration timezone -> org.hibernate.type.TimeZoneType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@38ba6ce3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration class -> org.hibernate.type.ClassType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7fbdb894
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5b67bb7e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5b67bb7e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@56c4278e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration binary -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration byte[] -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [B -> org.hibernate.type.BinaryType@59cba5a
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@768fc0f2
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration row_version -> org.hibernate.type.RowVersionType@3f67593e
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration image -> org.hibernate.type.ImageType@82ea68c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration characters -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration char[] -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [C -> org.hibernate.type.CharArrayType@8e50104
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45a37759
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration text -> org.hibernate.type.TextType@1838ccb8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration ntext -> org.hibernate.type.NTextType@4b213651
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration blob -> org.hibernate.type.BlobType@42530531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@42530531
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@35645047
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration clob -> org.hibernate.type.ClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1f53a5dc
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration nclob -> org.hibernate.type.NClobType@12359a82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@12359a82
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7164ca4c
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f91b517
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration serializable -> org.hibernate.type.SerializableType@21ba0741
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration object -> org.hibernate.type.ObjectType@2c78d320
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c78d320
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@106cc338
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7a67e3c6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6cc558c6
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@15713d56
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63f259c3
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@26ceffa8
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@600b90df
[main] DEBUG org.hibernate.type.BasicTypeRegistry  - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c8c9a05
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Database ->
       name : Oracle
    version : Oracle Database 11g Express Edition Release 11.2.0.2.0 - Production
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - Driver ->
       name : Oracle JDBC driver
    version : 11.2.0.2.0
      major : 11
      minor : 2
[main] DEBUG org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator  - JDBC version : 11.2
[main] INFO  org.hibernate.dialect.Dialect  - HHH000400: Using dialect: org.hibernate.dialect.Oracle10gDialect
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[main] DEBUG org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory  - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[main] DEBUG org.hibernate.boot.model.relational.Namespace  - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Account
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Account on table Account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountNo, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountNo with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountNo]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountNo
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountBalance with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountBalance]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountBalance
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property accountType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:accountType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property accountType
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=pinNumber, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property pinNumber with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:pinNumber]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property pinNumber
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=status, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property status with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Account:status]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property status
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=null, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=element, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=transaction_KEY, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='transaction_KEY', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='account'}
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Collection role: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transaction
[main] DEBUG org.hibernate.cfg.AnnotationBinder  - Binding entity from annotated class: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Import with entity name Transaction
[main] DEBUG org.hibernate.cfg.annotations.EntityBinder  - Bind entity com.cg.banking.beans.Transaction on table Transaction
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionId, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionId with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionId]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionId
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=account, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property account
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=amount, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property amount with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:amount]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property amount
[main] DEBUG org.hibernate.cfg.Ejb3Column  - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Transaction), mappingColumn=transactionType, insertable=true, updatable=true, unique=false}
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - MetadataSourceProcessor property transactionType with lazy=false
[main] DEBUG org.hibernate.cfg.AbstractPropertyHolder  - Attempting to locate auto-apply AttributeConverter for property [com.cg.banking.beans.Transaction:transactionType]
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - building SimpleValue for transactionType
[main] DEBUG org.hibernate.cfg.annotations.PropertyBinder  - Building property transactionType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountNo
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountBalance
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for accountType
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for pinNumber
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for status
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionId
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for amount
[main] DEBUG org.hibernate.cfg.annotations.SimpleValueBinder  - Starting fillSimpleValue for transactionType
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [accountno] to be non-null as it is part of the primary key for table [account]
[main] DEBUG org.hibernate.mapping.PrimaryKey  - Forcing column [transactionid] to be non-null as it is part of the primary key for table [transaction]
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Second pass for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Binding a OneToMany: com.cg.banking.beans.Account.transaction through a foreign key
[main] DEBUG org.hibernate.cfg.annotations.CollectionBinder  - Mapping collection: com.cg.banking.beans.Account.transaction -> Transaction
[main] DEBUG org.hibernate.cfg.annotations.TableBinder  - Retrieving property com.cg.banking.beans.Transaction.account
[main] DEBUG org.hibernate.cfg.CollectionSecondPass  - Mapped collection key: account_accountNo, one-to-many: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.InFlightMetadataCollectorImpl  - Resolving reference to class: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Building session factory
[main] DEBUG org.hibernate.cfg.Settings  - SessionFactory name : null
[main] DEBUG org.hibernate.cfg.Settings  - Automatic flush during beforeCompletion(): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic session close at end of transaction: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Statistics: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Deleted entity synthetic identifier rollback: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Default entity-mode: pojo
[main] DEBUG org.hibernate.cfg.Settings  - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[main] DEBUG org.hibernate.cfg.Settings  - Allow initialization of lazy state outside session : disabled
[main] DEBUG org.hibernate.cfg.Settings  - Using BatchFetchStyle : LEGACY
[main] DEBUG org.hibernate.cfg.Settings  - Default batch fetch size: -1
[main] DEBUG org.hibernate.cfg.Settings  - Maximum outer join fetch depth: null
[main] DEBUG org.hibernate.cfg.Settings  - Default null ordering: NONE
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL updates by primary key: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Order SQL inserts for batching: disabled
[main] DEBUG org.hibernate.cfg.Settings  - multi-tenancy strategy : NONE
[main] DEBUG org.hibernate.cfg.Settings  - JTA Track by Thread: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Query language substitutions: {}
[main] DEBUG org.hibernate.cfg.Settings  - JPA query language strict compliance: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Named query checking : enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7689ddef
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache region prefix: null
[main] DEBUG org.hibernate.cfg.Settings  - Optimize second-level cache for minimal puts: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Structured second-level cache entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Second-level cache direct-reference entries: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Automatic eviction of collection cache: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch size: 15
[main] DEBUG org.hibernate.cfg.Settings  - JDBC batch updates for versioned data: disabled
[main] DEBUG org.hibernate.cfg.Settings  - Scrollable result sets: enabled
[main] DEBUG org.hibernate.cfg.Settings  - Wrap result sets: disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC3 getGeneratedKeys(): disabled
[main] DEBUG org.hibernate.cfg.Settings  - JDBC result set fetch size: null
[main] DEBUG org.hibernate.cfg.Settings  - Connection release mode: ON_CLOSE
[main] DEBUG org.hibernate.cfg.Settings  - Generate SQL with comments: disabled
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Session factory constructed with filter configurations : {}
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.Oracle10gDialect, java.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext\zipfs.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\target\classes;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\apache-logging-log4j.jar;D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate\lib\ojdbc6_g.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-core\5.0.8.RELEASE\spring-core-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jcl\5.0.8.RELEASE\spring-jcl-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-context\5.0.8.RELEASE\spring-context-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-aop\5.0.8.RELEASE\spring-aop-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-beans\5.0.8.RELEASE\spring-beans-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-expression\5.0.8.RELEASE\spring-expression-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-tx\5.0.8.RELEASE\spring-tx-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-orm\5.0.8.RELEASE\spring-orm-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\spring-jdbc\5.0.8.RELEASE\spring-jdbc-5.0.8.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-jpa\2.0.7.RELEASE\spring-data-jpa-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\springframework\data\spring-data-commons\2.0.7.RELEASE\spring-data-commons-2.0.7.RELEASE.jar;D:\MavenConfig\MavenRepo\org\aspectj\aspectjrt\1.8.12\aspectjrt-1.8.12.jar;D:\MavenConfig\MavenRepo\org\slf4j\slf4j-api\1.7.25\slf4j-api-1.7.25.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\MavenConfig\MavenRepo\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;D:\MavenConfig\MavenRepo\antlr\antlr\2.7.7\antlr-2.7.7.jar;D:\MavenConfig\MavenRepo\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;D:\MavenConfig\MavenRepo\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;D:\MavenConfig\MavenRepo\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;D:\MavenConfig\MavenRepo\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;D:\MavenConfig\MavenRepo\org\hibernate\hibernate-entitymanager\5.2.12.Final\hibernate-entitymanager-5.2.12.Final.jar;D:\MavenConfig\MavenRepo\net\bytebuddy\byte-buddy\1.6.14\byte-buddy-1.6.14.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Asia/Calcutta, os.name=Windows 7, java.vm.specification.version=1.8, javax.persistence.validation.mode=AUTO, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_73\jre\bin, sun.java.command=com.cg.banking.client.MainClass, javax.persistence.sharedCache.mode=UNSPECIFIED, sun.cpu.endian=little, user.home=C:\Users\ADM-IG-HWDLAB1D, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_73\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_73\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_73\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_73\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_73-b02, user.name=ADM-IG-HWDLAB1D, path.separator=;, os.version=6.1, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.ejb.persistenceUnitName=default, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\ADM-IG~2\AppData\Local\Temp\, java.version=1.8.0_73, user.dir=D:\159859_Singh_Harkanwalpreet\Spring\CgBankingSpringJPAHibernate, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=Service Pack 1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2d8f2f3a, java.library.path=C:\Program Files\Java\jdk1.8.0_73\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin/server;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/bin;C:/Program Files/Java/jdk1.8.0_73/bin/../jre/lib/amd64;C:\oraclexe\app\oracle\product\11.2.0\server\bin;;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\QuickTime\QTSystem\;C:\Program Files\CapgeminiScripts\Support Tools\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\;C:\Program Files (x86)\MySQL\MySQL Fabric 1.5.3 & MySQL Utilities 1.5.3 1.5\Doctrine extensions for PHP\;;C:\Users\ADM-IG-HWDLAB1D\AppData\Local\Programs\Microsoft VS Code\bin;D:\sts-bundle\sts-bundle\sts-3.9.2.RELEASE;;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.73-b02, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@292b08d6, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_73\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
[main] DEBUG org.hibernate.secure.spi.JaccIntegrator  - Skipping JACC integration as it was not enabled
[main] DEBUG org.hibernate.engine.spi.CascadeStyles  - External cascade style registration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[main] DEBUG org.hibernate.internal.SessionFactoryImpl  - Instantiated session factory
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Account] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Account
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - Not known whether passed class name [com.cg.banking.beans.Transaction] is safe
[main] DEBUG org.hibernate.boot.internal.ClassLoaderAccessImpl  - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  - Static SQL for collection: com.cg.banking.beans.Account.transaction
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row insert: update Transaction set account_accountNo=? where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row update: update Transaction set  where transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  Row delete: update Transaction set account_accountNo=null where account_accountNo=? and transactionId=?
[main] DEBUG org.hibernate.persister.collection.AbstractCollectionPersister  -  One-shot delete: update Transaction set account_accountNo=null where account_accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Account
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select accountNo from Account where accountNo =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select account_.accountNo, account_.accountBalance as accountBalance2_0_, account_.accountType as accountType3_0_, account_.pinNumber as pinNumber4_0_, account_.status as status5_0_ from Account account_ where account_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Account where accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20d11153]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@ca66933]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63998bf4]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [NONE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e6b9a95]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f623d]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4cee7fa0]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26928a]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e2c95ee]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0ec63]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_NOWAIT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5942ee04]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e76a2bb]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [UPGRADE_SKIPLOCKED]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14faa38c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ff2b8d2]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [FORCE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1484]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2fb5fe30]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456be73c]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_READ]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2375b321]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b6e8f77]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a6d121]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_WRITE]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f449e8f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6e28bb87]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19f040ba]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [PESSIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ab05ed]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c3c4c1c]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d238b1]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7cc3cb]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transaction
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6cb754]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7d1df8]
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Account)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Account)
          - CollectionAttributeFetchImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Account.transaction)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:2>, path=com.cg.banking.beans.Account.transaction.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {accountNo1_0_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Account [OPTIMISTIC_FORCE_INCREMENT]: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Account: select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  - Static SQL for entity: com.cg.banking.beans.Transaction
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Version select: select transactionId from Transaction where transactionId =?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Snapshot select: select transactio_.transactionId, transactio_.account_accountNo as account_accountNo4_1_, transactio_.amount as amount2_1_, transactio_.transactionType as transactionType3_1_ from Transaction transactio_ where transactio_.transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Insert 0: insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Update 0: update Transaction set account_accountNo=?, amount=?, transactionType=? where transactionId=?
[main] DEBUG org.hibernate.persister.entity.AbstractEntityPersister  -  Delete 0: delete from Transaction where transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53667cbe]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [NONE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c68a5f8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountBalance
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.accountType
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.pinNumber
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.status
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account.transaction
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}
          - JOIN (JoinDefinedByMetadata(account)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Account)
                - SQL table alias mapping - account1_
                - alias suffix - 1_
                - suffixed key columns - {accountNo1_0_1_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_, account1_.accountNo as accountNo1_0_1_, account1_.accountBalance as accountBalance2_0_1_, account1_.accountType as accountType3_0_1_, account1_.pinNumber as pinNumber4_0_1_, account1_.status as status5_0_1_ from Transaction transactio0_ left outer join Account account1_ on transactio0_.account_accountNo=account1_.accountNo where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aefae67]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6719a5b8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bff19ff]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_NOWAIT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e1455d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccd3b9]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [UPGRADE_SKIPLOCKED]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update skip locked
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f197e]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1dd11]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [FORCE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c089b2f]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bae047]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_READ]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41477a6d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_WRITE]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc12da]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534ca02b]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [PESSIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=? for update nowait
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a23c3d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe46b62]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591fd34d]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9b78e3]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(entity=com.cg.banking.beans.Transaction)
    - Returns
       - EntityReturnImpl(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:0>, path=com.cg.banking.beans.Transaction)
          - EntityAttributeFetchImpl(entity=com.cg.banking.beans.Account, querySpaceUid=<gen:1>, path=com.cg.banking.beans.Transaction.account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.cg.banking.beans.Transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {transactionId1_1_0_}

[main] DEBUG org.hibernate.loader.entity.plan.EntityLoader  - Static select for entity com.cg.banking.beans.Transaction [OPTIMISTIC_FORCE_INCREMENT]: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_MERGE on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.Loader  - Static select for action ACTION_REFRESH on entity com.cg.banking.beans.Transaction: select transactio0_.transactionId as transactionId1_1_0_, transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.amount as amount2_1_0_, transactio0_.transactionType as transactionType3_1_0_ from Transaction transactio0_ where transactio0_.transactionId=?
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2a69b4]
[main] DEBUG org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl  - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a619c2]
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Property path deemed to be circular : account
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : amount
[main] DEBUG org.hibernate.persister.walking.spi.MetamodelGraphWalker  - Visiting attribute path : transactionType
[main] DEBUG org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy  - Building LoadPlan...
[main] DEBUG org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor  - processing queryspace <gen:0>
[main] DEBUG org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter  - LoadPlan(collection=com.cg.banking.beans.Account.transaction)
    - Returns
       - CollectionReturnImpl(collection=com.cg.banking.beans.Account.transaction, querySpaceUid=<gen:0>, path=[com.cg.banking.beans.Account.transaction])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.cg.banking.beans.Transaction, querySpaceUid=<gen:1>, path=[com.cg.banking.beans.Account.transaction].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.cg.banking.beans.Account.transaction)
          - SQL table alias mapping - transactio0_
          - alias suffix - 0_
          - suffixed key columns - {account_accountNo4_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - transactionId1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.cg.banking.beans.Transaction)
                - SQL table alias mapping - transactio0_
                - alias suffix - 1_
                - suffixed key columns - {transactionId1_1_1_}

[main] DEBUG org.hibernate.loader.collection.plan.CollectionLoader  - Static select for collection com.cg.banking.beans.Account.transaction: select transactio0_.account_accountNo as account_accountNo4_1_0_, transactio0_.transactionId as transactionId1_1_0_, transactio0_.transactionId as transactionId1_1_1_, transactio0_.account_accountNo as account_accountNo4_1_1_, transactio0_.amount as amount2_1_1_, transactio0_.transactionType as transactionType3_1_1_ from Transaction transactio0_ where transactio0_.account_accountNo=?
[main] DEBUG org.hibernate.SQL  - drop table Account cascade constraints
[main] DEBUG org.hibernate.SQL  - drop table Transaction cascade constraints
[main] DEBUG org.hibernate.SQL  - drop sequence seq_account
[main] DEBUG org.hibernate.SQL  - drop sequence transaction_seq
[main] DEBUG org.hibernate.SQL  - create sequence seq_account start with 123123123 increment by 1
[main] DEBUG org.hibernate.SQL  - create sequence transaction_seq start with 100 increment by 50
[main] DEBUG org.hibernate.SQL  - create table Account (accountNo number(19,0) not null, accountBalance float not null, accountType varchar2(255 char), pinNumber number(10,0) not null, status varchar2(255 char), primary key (accountNo))
[main] DEBUG org.hibernate.SQL  - create table Transaction (transactionId number(10,0) not null, amount float not null, transactionType varchar2(255 char), account_accountNo number(19,0), primary key (transactionId))
[main] DEBUG org.hibernate.SQL  - alter table Transaction add constraint FKgw5j6wjnj29x1f9aiolkf4hri foreign key (account_accountNo) references Account
[main] INFO  org.hibernate.tool.schema.internal.SchemaCreatorImpl  - HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@ff6077'
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator  - No JtaPlatform was specified, checking resolver
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator  - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[main] DEBUG org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver  - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named HQL queries
[main] DEBUG org.hibernate.query.spi.NamedQueryRepository  - Checking 0 named SQL queries
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@21ab988f
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Registering SessionFactory: 64a40d15-1062-449d-8790-50ad796c1eb1 (<unnamed>)
[main] DEBUG org.hibernate.internal.SessionFactoryRegistry  - Not binding SessionFactory to JNDI, no JNDI name configured
[main] DEBUG org.hibernate.stat.internal.StatisticsInitiator  - Statistics initialized [enabled=false]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select seq_account.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 123123123
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 123123123, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=9000.0, transaction=null, status=Active}
[main] DEBUG org.hibernate.SQL  - insert into Account (accountBalance, accountType, pinNumber, status, accountNo) values (?, ?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 100
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.SQL  - select transaction_seq.nextval from dual
[main] DEBUG org.hibernate.id.enhanced.SequenceStructure  - Sequence value obtained: 150
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 100, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Deposit, amount=5000.0, transactionId=100, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.DefaultMergeEventListener  - EntityCopyObserver strategy: disallow
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=14000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.event.internal.AbstractSaveEventListener  - Generated identifier: 101, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Transaction{transactionType=Withdraw, amount=10000.0, transactionId=101, account=null}
[main] DEBUG org.hibernate.SQL  - insert into Transaction (account_accountNo, amount, transactionType, transactionId) values (?, ?, ?, ?)
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.loader.Loader  - Loading entity: [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.loader.Loader  - Done entity load
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Processing flush-time cascades
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Dirty checking collections
[main] DEBUG org.hibernate.engine.internal.Collections  - Collection found: [com.cg.banking.beans.Account.transaction#123123123], was: [com.cg.banking.beans.Account.transaction#123123123] (uninitialized)
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[main] DEBUG org.hibernate.event.internal.AbstractFlushingEventListener  - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - Listing entities:
[main] DEBUG org.hibernate.internal.util.EntityPrinter  - com.cg.banking.beans.Account{accountNo=123123123, accountType=Saving, pinNumber=1234, accountBalance=4000.0, transaction=<uninitialized>, status=Active}
[main] DEBUG org.hibernate.SQL  - update Account set accountBalance=?, accountType=?, pinNumber=?, status=? where accountNo=?
[main] DEBUG org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl  - HHH000420: Closing un-released batch
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_0_, account0_.accountBalance as accountBalance2_0_0_, account0_.accountType as accountType3_0_0_, account0_.pinNumber as pinNumber4_0_0_, account0_.status as status5_0_0_ from Account account0_ where account0_.accountNo=?
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.ResultSetProcessorImpl  - Starting ResultSet row #0
[main] DEBUG org.hibernate.loader.plan.exec.process.internal.EntityReferenceInitializerImpl  - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Account#123123123]
[main] DEBUG org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl  - HHH000387: ResultSet's statement was not registered
[main] DEBUG org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader  - Done entity load : com.cg.banking.beans.Account#123123123
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - begin
[main] DEBUG org.hibernate.query.criteria.internal.CriteriaQueryImpl  - Rendered criteria query -> select generatedAlias0 from Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5633dafd
[main] INFO  org.hibernate.hql.internal.QueryTranslatorFactoryInitiator  - HHH000397: Using ASTQueryTranslatorFactory
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'cg'
       |     |  |  |  \-[IDENT] Node: 'banking'
       |     |  |  \-[IDENT] Node: 'beans'
       |     |  \-[IDENT] Node: 'Transaction'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Transaction (generatedAlias0) -> transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromReferenceNode  - Resolved : generatedAlias0 -> transactio0_.transactionId
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( {select clause} transactio0_.transactionId ) ( FromClause{level=1} Transaction transactio0_ ) )
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Transaction transactio0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Transaction)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'transactio0_.transactionId as transactionId1_1_' {alias=generatedAlias0, className=com.cg.banking.beans.Transaction, tableAlias=transactio0_}
    |  \-[SQL_TOKEN] SqlFragment: 'transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[transactio0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Transaction transactio0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Transaction,tableAlias=transactio0_,origin=null,columns={,className=com.cg.banking.beans.Transaction}}

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: select generatedAlias0 from com.cg.banking.beans.Transaction as generatedAlias0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select transactio0_.transactionId as transactionId1_1_, transactio0_.account_accountNo as account_accountNo4_1_, transactio0_.amount as amount2_1_, transactio0_.transactionType as transactionType3_1_ from Transaction transactio0_
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 0
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.loader.Loader  - Result set row: 1
[main] DEBUG org.hibernate.loader.Loader  - Result row: EntityKey[com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#100]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Resolving associations for [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.internal.TwoPhaseLoad  - Done materializing entity [com.cg.banking.beans.Transaction#101]
[main] DEBUG org.hibernate.engine.transaction.internal.TransactionImpl  - committing
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - parse() - HQL: from com.cg.banking.beans.Account a where balance < 5000.0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        +-[DOT] Node: '.'
    |        |  +-[DOT] Node: '.'
    |        |  |  +-[DOT] Node: '.'
    |        |  |  |  +-[DOT] Node: '.'
    |        |  |  |  |  +-[IDENT] Node: 'com'
    |        |  |  |  |  \-[IDENT] Node: 'cg'
    |        |  |  |  \-[IDENT] Node: 'banking'
    |        |  |  \-[IDENT] Node: 'beans'
    |        |  \-[IDENT] Node: 'Account'
    |        \-[ALIAS] Node: 'a'
    \-[WHERE] Node: 'where'
       \-[LT] Node: '<'
          +-[IDENT] Node: 'balance'
          \-[NUM_DOUBLE] Node: '5000.0'

[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select << begin [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.tree.FromElement  - FromClause{level=1} : com.cg.banking.beans.Account (a) -> account0_
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select : finishing up [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - processQuery() :  ( SELECT ( FromClause{level=1} Account account0_ ) ( where ( < balance 5000.0 ) ) )
[main] DEBUG org.hibernate.hql.internal.ast.HqlSqlWalker  - Derived SELECT clause created.
[main] DEBUG org.hibernate.hql.internal.ast.util.JoinProcessor  - Using FROM fragment [Account account0_]
[main] DEBUG org.hibernate.hql.internal.antlr.HqlSqlBaseWalker  - select >> end [level=1, statement=select]
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Account)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'account0_.accountNo as accountNo1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cg.banking.beans.Account}}}
    |  \-[SQL_TOKEN] SqlFragment: 'account0_.accountBalance as accountBalance2_0_, account0_.accountType as accountType3_0_, account0_.pinNumber as pinNumber4_0_, account0_.status as status5_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[a], fromElementByTableAlias=[account0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Account account0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=a,role=null,tableName=Account,tableAlias=account0_,origin=null,columns={,className=com.cg.banking.beans.Account}}
    \-[WHERE] SqlNode: 'where'
       \-[LT] BinaryLogicOperatorNode: '<'
          +-[IDENT] IdentNode: 'balance' {originalText=balance}
          \-[NUM_DOUBLE] LiteralNode: '5000.0'

[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - HQL: from com.cg.banking.beans.Account a where balance < 5000.0
[main] DEBUG org.hibernate.hql.internal.ast.QueryTranslatorImpl  - SQL: select account0_.accountNo as accountNo1_0_, account0_.accountBalance as accountBalance2_0_, account0_.accountType as accountType3_0_, account0_.pinNumber as pinNumber4_0_, account0_.status as status5_0_ from Account account0_ where balance<5000.0
[main] DEBUG org.hibernate.hql.internal.ast.ErrorCounter  - throwQueryException() : no errors
[main] DEBUG org.hibernate.SQL  - select account0_.accountNo as accountNo1_0_, account0_.accountBalance as accountBalance2_0_, account0_.accountType as accountType3_0_, account0_.pinNumber as pinNumber4_0_, account0_.status as status5_0_ from Account account0_ where balance<5000.0
[main] DEBUG org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - could not extract ResultSet [n/a]
java.sql.SQLSyntaxErrorException: ORA-00904: "BALANCE": invalid identifier

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:452)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:400)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:884)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:471)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:199)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:535)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:238)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:1196)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1444)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1662)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:4364)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:4445)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:6268)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893)
	at org.hibernate.loader.Loader.doQuery(Loader.java:938)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341)
	at org.hibernate.loader.Loader.doList(Loader.java:2692)
	at org.hibernate.loader.Loader.doList(Loader.java:2675)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507)
	at org.hibernate.loader.Loader.list(Loader.java:2502)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:384)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1490)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414)
	at org.hibernate.query.Query.getResultList(Query.java:146)
	at com.cg.banking.daoServices.AccountDAOCustomImpl.findFew(AccountDAOCustomImpl.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:377)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:200)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:629)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:593)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:578)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy25.findFew(Unknown Source)
	at com.cg.banking.services.BankingServicesImpl.findFew(BankingServicesImpl.java:115)
	at com.cg.banking.client.MainClass.main(MainClass.java:35)
[main] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - SQL Error: 904, SQLState: 42000
[main] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper  - ORA-00904: "BALANCE": invalid identifier

